# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-05-08 21:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import mntnr_hosts
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mntnr_hardware', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('type', enumfields.fields.EnumIntegerField(enum=mntnr_hosts.ClusterType)),
            ],
        ),
        migrations.CreateModel(
            name='ClusterVirtualMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(help_text='Fully qualified domain name', max_length=256, unique=True)),
                ('operating_system', enumfields.fields.EnumIntegerField(enum=mntnr_hosts.OperatingSystem)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(help_text='Fully qualified domain name', max_length=256, unique=True)),
                ('operating_system', enumfields.fields.EnumIntegerField(enum=mntnr_hosts.OperatingSystem)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(help_text='a short name for this environment')),
                ('hostname_regex', models.CharField(help_text='reges that defines valid host names for this environment', max_length=128)),
                ('description', models.TextField(blank=True, help_text='(optional) description of the environment')),
                ('monitored', models.BooleanField(help_text='shold new hosts in this environment be monitored by default?')),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='HostVirtualMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(help_text='Fully qualified domain name', max_length=256, unique=True)),
                ('operating_system', enumfields.fields.EnumIntegerField(enum=mntnr_hosts.OperatingSystem)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mntnr_hosts.Environment')),
                ('host', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='mntnr_hosts.Host')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mntnr_hosts.DeviceHost')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='host role name', max_length=128, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='hostvirtualmachine',
            name='roles',
            field=models.ManyToManyField(blank=True, to='mntnr_hosts.Role'),
        ),
        migrations.AddField(
            model_name='devicehost',
            name='environment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mntnr_hosts.Environment'),
        ),
        migrations.AddField(
            model_name='devicehost',
            name='host',
            field=models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='mntnr_hosts.Host'),
        ),
        migrations.AddField(
            model_name='devicehost',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mntnr_hardware.Device'),
        ),
        migrations.AddField(
            model_name='devicehost',
            name='roles',
            field=models.ManyToManyField(blank=True, to='mntnr_hosts.Role'),
        ),
        migrations.AddField(
            model_name='clustervirtualmachine',
            name='environment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mntnr_hosts.Environment'),
        ),
        migrations.AddField(
            model_name='clustervirtualmachine',
            name='host',
            field=models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='mntnr_hosts.Host'),
        ),
        migrations.AddField(
            model_name='clustervirtualmachine',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mntnr_hosts.Cluster'),
        ),
        migrations.AddField(
            model_name='clustervirtualmachine',
            name='roles',
            field=models.ManyToManyField(blank=True, to='mntnr_hosts.Role'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='members',
            field=models.ManyToManyField(to='mntnr_hosts.Host'),
        ),
    ]
